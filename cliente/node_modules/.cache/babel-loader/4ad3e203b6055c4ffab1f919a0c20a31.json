{"ast":null,"code":"var _jsxFileName = \"/home/edwin/proyectos/cursos_react/MERN/cliente/src/context/proyectos/proyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL } from '../../types';\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const proyectos = [{\n    id: 1,\n    nombre: 'Tienda virtual'\n  }, {\n    id: 2,\n    nombre: 'Dominio'\n  }, {\n    id: 3,\n    nombre: 'Backend Java'\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorFormulario: false,\n    proyecto: null\n  }; //dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //serie de funciones para crud\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //Obtener los proyectos\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  }; //Agregar nuevo proyecto\n\n\n  const agregarProyecto = proyecto => {\n    proyecto.id = uuid(); //insertar proyecto en el state\n\n    dispatch({\n      type: AGREGAR_PROYECTO,\n      payload: proyecto\n    });\n  }; //Validar formulario\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //Selecciona el proyecto que el usuario clickeo\n\n\n  const proyectoActual = () => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyecto\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(proyectoContext.Provider, {\n    value: {\n      formulario: state.formulario,\n      proyectos: state.proyectos,\n      errorFormulario: state.errorFormulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["/home/edwin/proyectos/cursos_react/MERN/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","v4","uuid","ProyectoState","props","proyectos","id","nombre","initialState","formulario","errorFormulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","mostrarError","proyectoActual","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,EAAiDC,gBAAjD,EAAmEC,kBAAnE,EAAuFC,eAAvF,QAA8G,aAA9G;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;;AAIA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAE3B,QAAMC,SAAS,GAAG,CACd;AAACC,IAAAA,EAAE,EAAE,CAAL;AAASC,IAAAA,MAAM,EAAE;AAAjB,GADc,EAEd;AAACD,IAAAA,EAAE,EAAE,CAAL;AAASC,IAAAA,MAAM,EAAE;AAAjB,GAFc,EAGd;AAACD,IAAAA,EAAE,EAAE,CAAL;AAASC,IAAAA,MAAM,EAAE;AAAjB,GAHc,CAAlB;AAMA,QAAMC,YAAY,GAAG;AACjBH,IAAAA,SAAS,EAAG,EADK;AAEjBI,IAAAA,UAAU,EAAG,KAFI;AAGjBC,IAAAA,eAAe,EAAG,KAHD;AAIjBC,IAAAA,QAAQ,EAAG;AAJM,GAArB,CAR2B,CAgB3B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACE,eAAD,EAAkBa,YAAlB,CAApC,CAjB2B,CAmB3B;;AACA,QAAMM,iBAAiB,GAAG,MAAI;AAC1BD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACnB;AAAN,KAAD,CAAR;AACH,GAFD,CApB2B,CAwB3B;;;AACA,QAAMoB,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAElB,iBADD;AAELoB,MAAAA,OAAO,EAAEZ;AAFJ,KAAD,CAAR;AAIH,GALD,CAzB2B,CAgC3B;;;AACA,QAAMa,eAAe,GAAGP,QAAQ,IAAI;AAChCA,IAAAA,QAAQ,CAACL,EAAT,GAAcJ,IAAI,EAAlB,CADgC,CAGhC;;AACAW,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACjB,gBADA;AAELmB,MAAAA,OAAO,EAACN;AAFH,KAAD,CAAR;AAIH,GARD,CAjC2B,CA2C3B;;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAChB;AADA,KAAD,CAAR;AAGH,GAJD,CA5C2B,CAkD3B;;;AACA,QAAMqB,cAAc,GAAG,MAAM;AACzBP,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,eADD;AAELiB,MAAAA,OAAO,EAAGN;AAFL,KAAD,CAAR;AAIH,GALD;;AAQA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHF,MAAAA,UAAU,EAAGG,KAAK,CAACH,UADhB;AAEHJ,MAAAA,SAAS,EAAEO,KAAK,CAACP,SAFd;AAGHK,MAAAA,eAAe,EAAGE,KAAK,CAACF,eAHrB;AAIHC,MAAAA,QAAQ,EAAGC,KAAK,CAACD,QAJd;AAKHG,MAAAA,iBALG;AAMHE,MAAAA,gBANG;AAOHE,MAAAA,eAPG;AAQHC,MAAAA,YARG;AASHC,MAAAA;AATG,KADX;AAAA,cAcKhB,KAAK,CAACiB;AAdX;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA9ED;;GAAMlB,a;;KAAAA,a;AAgFN,eAAeA,aAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL } from '../../types';\nimport {v4 as uuid} from \"uuid\"; \n\n\n\nconst ProyectoState = props => {\n\n    const proyectos = [\n        {id: 1 , nombre: 'Tienda virtual'},\n        {id: 2 , nombre: 'Dominio'},\n        {id: 3 , nombre: 'Backend Java'}\n    ]\n\n    const initialState = {\n        proyectos : [],        \n        formulario : false,\n        errorFormulario : false,\n        proyecto : null\n\n    }\n\n    //dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n\n    //serie de funciones para crud\n    const mostrarFormulario = ()=>{\n        dispatch({type:FORMULARIO_PROYECTO })\n    }\n\n    //Obtener los proyectos\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectos\n        })\n    }\n\n    //Agregar nuevo proyecto\n    const agregarProyecto = proyecto => {\n        proyecto.id = uuid();\n\n        //insertar proyecto en el state\n        dispatch({\n            type:AGREGAR_PROYECTO,\n            payload:proyecto\n        })\n    }\n\n    //Validar formulario\n    const mostrarError = () => {\n        dispatch({\n            type:VALIDAR_FORMULARIO\n        })\n    }\n\n    //Selecciona el proyecto que el usuario clickeo\n    const proyectoActual = () => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload : proyecto\n        })\n    }\n\n\n    return(\n        <proyectoContext.Provider\n            value={{\n                formulario : state.formulario,               \n                proyectos :state.proyectos,\n                errorFormulario : state.errorFormulario,\n                proyecto : state.proyecto,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual\n                \n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n    \n}\n\nexport default ProyectoState"]},"metadata":{},"sourceType":"module"}